<header>
    <hgroup>
        <h2>Community App Sharing Architecture</h2>
        <h1>Relay Module</h1>
    </hgroup>
</header>

<footer>
    
    <section>
        <h1>Status of this Memo</h1>
        <p>This memorandum specifies the CASA Protocol Relay Module, which defines how to make inter-system queries to retrieve payloads and then publish those payloads inter-system. The specification outlined forthwith is a work in progress and not intended for production use at this time. Distribution of this memo is unlimited.</p>
    </section>
    
    <section>
        <h1>Copyright Notice</h1>
        <p>Copyright (c) 2013, Regents of the University of California. All rights reserved.</p>
    </section>
    
    <section>
        
        <h1>Requirements</h1>
        
        <p>The following specifications must be implemented with this module:</p>
        
        <dl>
            <dt><a href="core">CASA Protocol Core</a></dt>
            <dd>Must implement basic protocol definition.</dd>
            <dt><a href="module/payload#transitpayload">CASA Protocol Payload Module - TransitPayload</a></dt>
            <dd>Must implement TransitPayload with journal attribute.</dd>
            <dt><a href="module/payload#localpayload">CASA Protocol Payload Module - LocalPayload</a></dt>
            <dd>Must implement LocalPayload with original attribute and journal attribute.</dd>
            <dt><a href="module/publisher#sendout">CASA Protocol Publisher Module - SendOut</a></dt>
            <dd>Must implement SendOut; may implement with access control.</dd>
            <dt><a href="module/receiver#receivein">CASA Protocol Receiver Module - ReceiveIn</a></dt>
            <dd>Must implement ReceiveIn; may implement with access control.</dd>
            <dt><a href="module/receiver#adjintranslate">CASA Protocol Receiver Module - AdjInTranslate</a></dt>
            <dd>Must implement AdjInTranslate.</dd>
            <dt><a href="module/receiver#adjinsquash">CASA Protocol Receiver Module - AdjInSquash</a></dt>
            <dd>Must implement AdjInSquash.</dd>
            <dt><a href="module/receiver#adjinsquash">CASA Protocol Receiver Module - AdjInFilter</a></dt>
            <dd>Must implement AdjInFilter; may implement with custom rules.</dd>
            <dt><a href="module/receiver#adjinstore">CASA Protocol Receiver Module - AdjInStore</a></dt>
            <dd>Must implement AdjInStore.</dd>
        </dl>
        
    </section>
    
    <section>
        
        <h1>Terminology</h1>
        <p>The key words <strong>must</strong>, <strong>must not</strong>, <strong>required</strong>, <strong>shall</strong>, <strong>shall not</strong>, <strong>should</strong>, <strong>should not</strong>, <strong>recommended</strong>, <strong>may</strong>, and <strong>optional</strong> in this document are to be interpreted as described by <strong><a href="http://tools.ietf.org/rfc/rfc2119.txt" rel="external">RFC 2119</a></strong> ["Key words for use in RFCs to Indicate Requirement Levels"].</p>
        
    </section>
    
</footer>

<main>
    
    <section data-requirement="must">
        
        <h1>Data Path</h1>
        
        <p>To receive a payload received as described by the <a href="module/receiver">Receiver Module</a>:</p>
        
        <ol>
            <li>Create empty array for payloads response.</li>
            <li>
                For each payload from <a href="module/receiver#adjinstore"><var>AdjInStore::get()</var> (Receiver Module)</a>:
                <ol>
                    <li>Must transform attributes via <a href="#adjouttransform"><var>AdjOutTransform</var></a>; may transform with custom rules;</li>
                    <li>May store within <a href="#adjoutstore">AdjOutStore</a>;</li>
                    <li>Must pass filtering by <a href="#adjoutfilter"><var>AdjOutFilter</var></a>; may filter with custom rules;</li>
                    <li>Must translate via <a href="#adjouttranslate">AdjOutTranslate</a>;</li>
                    <li>Should append to payloads response array</li>
                </ol>
            </li>
            <li>Send payloads response array via <a href="module/publisher#sendout"><var>SendOut</var> (Publisher Module)</a>.</li>
        </ol>
        
        <p>Upon successful completion of this data path, a system shall have produced a set of valid <a href="module/payloads#transitpayload"><var>TransitPayload</var> (Payload Module)</a> objects for inter-system retrieval by a peering system.</p>
        
    </section>
    
    <section data-requirement="must">
        
        <h1>AdjOutTransform</h1>
        
        <p>The <dfn>AdjOutTransform</dfn> operation makes changes to all payloads before they are shared outbound. This operation must be performed over any payload before it may be conveyed beyond the boundaries of the system.</p>
        
        <section data-status="conflict" data-message="By implication, this section is in conflict with <a href='module/payload#transitpayload-attributes'><var>TransitPayload.attributes</var> (Payload Module)</a> because it does nothing to remove the <var>attributes</var> section that is marked as 'should not' under the other module. It is likely that the 'should not' classification should be changed to 'may' rather than this section adjusted, as there's no good reason for not allowing its inclusion.">
            
            <p>This operation must perform the following transformations:</p>
        
            <ol>
                <li>If <var>original</var> section is not defined, it must be created as a copy of the <var>attributes</var> section.</li>
                <li>If <var>attributes.propagate</var> is <var>false</var>, the value of <var>attributes.share</var> must be set <var>false</var>.</li>
            </ol>
            
            <p>An implementation may define additional criteria for this operation.</p>
            
        </section>
        
        <section data-requirement="should" data-status="stub">

            <h1>AdjOutTransformRules</h1>

        </section>

    </section>
    
    <section data-requirement="may" data-status="incomplete">
        
        <h1>AdjOutStore</h1>
        
    </section>
    
    <section data-requirement="must">
        
        <h1>AdjOutFilter</h1>
        
        <p>The <var>AdjOutFilter</var> operation determines whether the system may share a payload beyond its boundaries. A payload that fails this operation must not be delivered to any inter-system peer.</p>
        
        <p>This operation must not pass unless the following conditions are all true:</p>
        
        <ol>
            <li>The value of <var>attributes.share</var> must not be <var>false</var>.</li>
        </ol>
        
        <p>An implementation may define additional criteria for this operation.</p>
            
        <section data-requirement="should" data-status="stub">

            <h1>AdjOutFilterRules</h1>
            
            <p>The <var>AdjOutFilterRules</var> structure may be implemented as a methodology for specifying filter rules.</p>
            
            <section data-status="non-normative">
                
                <p>While implementations may add AdjOutFilter constraints internally, this structure is useful for allowing outlet- or user- defined rules, such as via the <a href="module/manager#OutletReceiveAdjOutFilterRules"><var>OutletReceiveAdjOutFilterRules</var> (Manager Module)</a> operation.</p>
                
            </section>

        </section>
        
    </section>
    
    <section data-requirement="must" data-status="incomplete">
        
        <h1>AdjOutTranslate</h1>
        
    </section>
    
</main>
