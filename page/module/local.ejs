<header>
    <hgroup>
        <h2>Community App Sharing Architecture</h2>
        <h1>Local Module</h1>
    </hgroup>
</header>

<footer>
    
    <section>
        <h1>Status of this Memo</h1>
        <p>This memorandum specifies the CASA Protocol Local Module, which defines how payloads must be presented for access by intra-system outlets. The specification outlined forthwith is a work in progress and not intended for production use at this time. Distribution of this memo is unlimited.</p>
    </section>
    
    <section>
        <h1>Copyright Notice</h1>
        <p>Copyright (c) 2013-14, Regents of the University of California. All rights reserved.</p>
    </section>
    
    <section>
        
        <h1>Requirements</h1>
        
        <p>The following specifications must be implemented with this module:</p>
        
        <dl>
            <dt><a href="core">CASA Protocol Core</a></dt>
            <dd>Must implement basic protocol definition.</dd>
            <dt><a href="module/payload#localpayload">CASA Protocol Payload Module - LocalPayload</a></dt>
            <dd>Must implement LocalPayload; should implement with original attribute; may implement with journal attribute.</dd>
        </dl>
        
    </section>
    
    <section>
        
        <h1>Terminology</h1>
        <p>The key words <strong>must</strong>, <strong>must not</strong>, <strong>required</strong>, <strong>shall</strong>, <strong>shall not</strong>, <strong>should</strong>, <strong>should not</strong>, <strong>recommended</strong>, <strong>may</strong>, and <strong>optional</strong> in this document are to be interpreted as described by <strong><a href="http://tools.ietf.org/rfc/rfc2119.txt" rel="external">RFC 2119</a></strong> ["Key words for use in RFCs to Indicate Requirement Levels"].</p>
        <p>The key words <strong>HTTP request</strong>, <strong>HTTP response</strong>, <strong>HTTP header</strong>, <strong>HTTP GET Request</strong>, <strong>HTTP Response Status Code</strong> (alternatively: <strong>response status</strong>), <strong>Client Error 4xx</strong> (alternatively: <strong>4xx Error</strong>) and <strong>Server Error 5xx</strong> (alternatively: <strong>5xx Error</strong>) in this document are to be interpreted as described by <strong><a href="http://tools.ietf.org/rfc/rfc2616.txt" rel="external">RFC 2616</a></strong> ["Hypertext Transfer Protocol -- HTTP/1.1"].</p>
        <p>The key word <strong>utf-8</strong> in this document is to be interpreted as described by <strong><a href='http://tools.ietf.org/rfc/rfc3629.txt' rel='external'>RFC 3629</a></strong> ["UTF-8, a transformation format of ISO 10646"].</p>
        <p>The key word <strong>property</strong> (alternatively: <strong>attribute</strong> or <strong>section</strong>) in this document is to be interpreted as described by <strong><a href="http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf" rel="external">ECMA-262 Edition 5.1</a></strong>.</p>
        <p>The key words <strong>string</strong>, <strong>array</strong>, <strong>object</strong>, <strong>name/value pair</strong> (alternatively: <strong>key-value pair</strong>) and <strong>JavaScript Object Notation</strong> (alternatively: <strong>JSON</strong>) in this document is to be interpreted as described by <strong><a href="http://tools.ietf.org/rfc/rfc4627.txt" rel="external">RFC 4627</a></strong> ["The application/json Media Type for JavaScript Object Notation (JSON)"].</p>
        <p>The key word <strong>JSON Schema</strong> in this document is to be interpreted as a JSON format defined by the <strong><a href="http://json-schema.org/latest/json-schema-core.html" rel="external">json-schema-core</a></strong> ["JSON Schema: core definitions and terminology"] and <strong><a href="http://json-schema.org/latest/json-schema-validation.html" rel="external">json-schema-validation</a></strong> ["JSON Schema: interactive and non interactive validation"] specifications.</p>
        <p data-status="incomplete">The key word <strong>search string</strong> in this document is to be interpreted as</p>
        
    </section>
    
</footer>

<main>

    <section data-requirement="must">

        <h1>SendLocal</h1>

        <p>The <dfn>SendLocal</dfn> operation publish payloads to local outlets. It responds to an HTTP GET request on the <var>/local/payloads</var> route, as outlined herein, with a JSON formatted array of <a href="module/payload#localpayload"><var>LocalPayload</var> (Payload Module)</a> objects, unless an error is encountered, in which case it throws a 4xx or 5xx Error Response.</p>

        <p data-status="non-normative">This operation must be used intra-system only. Inter-system sharing of payloads occurs via the <a href="module/publisher#sendout"><var>SendOut</var> (Publisher Module)</a> operation.</p>

        <section data-requirement="must">

            <h1 data-ref="sendlocal-request">Request</h1>

            <p data-status="non-normative">The engine exposes between two and four interfaces to which a local outlet may issue a request. All requests should include include <var>Accept</var>, <var>Accept-Charset</var>, <var>Accept-Encoding</var> and <var>Content-Type</var> headers.</p>

            <p>The following rules should be applied for all requests:</p>

            <dl>
                <dt><var>Accept Header</var></dt>
                <dd><var>application/json</var> should be specified for this header. The omission of this header may be assumed by a local outlet as <var>application/json</var>. If the client sends an <var>Accept</var> header without <var>application/json</var>, a 4xx Error must be thrown.</dd>
                <dt><var>Accept-Charset Header</var></dt>
                <dd>Only <var>utf-8</var> is valid for this header. The omission of this header must be assumed as <var>utf-8</var>. If the client sends any other <var>Accept-Charset</var> header, a 4xx Error must be thrown.</dd>
                <dt><var>Accept-Encoding Header</var></dt>
                <dd>Any value for this header is valid. The host should attempt to implement this encoding for a response but it may ignore this header.</dd>
                <dt><var>Content-Type Header</var></dt>
                <dd>If the client includes a request body, <var>application/json</var> and <var>charset=utf-8</var> should be specified for this header. The omission of this header may be assumed as <var>application/json</var> if a request body is sent. If the client sends any <var>Content-Type</var> header without <var>application/json</var> and <var>charset=utf-8</var>, a 4xx Error must be thrown unless the server understands and processes the body data based on the non-standard <var>Content-Type</var> header sent by the client.</dd>
                <dt><var>Body Content</var></dt>
                <dd>If the client includes a request body, it must be a JSON-formatted object of key-value pairs. If the client sends any other body content, a 4xx Error must be thrown unless the server understands and processes the body data based on non-standard <var>Content-Type</var> header sent by the client.</dd>
            </dl>

            <section data-requirement="should" data-status="stub">

                <h1 data-ref="sendlocal-cors">Cross-Origin Resource Sharing</h1>

            </section>

            <section data-requirement="may" data-status="stub">

                <h1 data-ref="sendlocal-access-controls">Request with Access Controls</h1>

            </section>

        </section>

        <section data-requirement="must">

            <h1 data-ref="sendlocal-response">Response</h1>

            <section>

                <h1>Success Response</h1>

                <p>If a host will fulfill the request, it must respond with a <var>200 OK</var> response status.</p>

                <p>A response body of a <var>200 OK</var> response must be of a format stipulated by one of the request methods: <var><a href="#sendlocal-one">SendLocal-One</a></var>, <var><a href="#sendlocal-all">SendLocal-All</a></var> and <var><a href="#sendlocal-query">SendLocal-Query</a></var>. In all cases, the response must be JSON-formatted and use the utf-8 charset. Consequently, this response should include <var>Content-Type: application/json;charset=utf-8</var> header, although this may be implied by omission. The host must not send any other <var>Content-Type</var> header.</p>

            </section>

            <section>

                <h1 data-ref="sendlocal-response-error">Error Response</h1>

                <p>If a host will not fulfill the request, it must respond with a 4xx Error or 5xx Error.</p>

                <p>The following status codes are recommended:</p>

                <dl>
                    <dt>400 Bad Request</dt>
                    <dd>The request body contained malformed JSON.</dd>
                    <dt>406 Not Acceptable</dt>
                    <dd>The request specified a non-conforming <var>Accept</var> or <var>Accept-Charset</var> header.</dd>
                    <dt>415 Unsupported Media Type</dt>
                    <dd>The request specified a non-conforming <var>Content-Type</var> header.</dd>
                </dl>

                <p>An error response may include a message body. If it includes the message body, it must be a plaintext body describing the error.</p>

            </section>

            <section data-requirement="may" data-status="stub">

                <h1 data-ref="sendlocal-access-controls">Response with Access Controls</h1>

            </section>

        </section>

        <section data-requirement="must">

            <h1 data-ref="sendlocal-one">SendLocal-One</h1>

            <p>The <dfn>SendLocal-One</dfn> operation publishes a payload identified by an <var>(APP_UID, ORIGINATOR_UUID)</var> tuple to local outlets within the autonomous system.</p>

            <section>

                <h1>Request</h1>

                <p>This operation responds to an HTTP GET request on the <var>/local/payloads/ORIGINATOR_UUID/APP_UID</var> route, where <dfn>ORIGINATOR_UUID</dfn> is the UUID of the engine that introduced the payload to the network and <dfn>APP_UID</dfn> is the UID of the app in the context of the originating engine.</p>

            </section>

            <section>

                <h1>Success Response</h1>

                <p>If the engine will fulfill the request, it must reply with a <var>200 Success</var> response with a JSON-formatted message body containing a <a href="module/payload#localpayload"><var>LocalPayload</var> (Payload Module)</a> object.</p>

            </section>

            <section>

                <h1>Error Response</h1>

                <p>If the engine will not fulfill the request, it must reply with a <var>Client Error 4xx</var> or a <var>Server Error 5xx</var>. In addition to the status codes recommended in <a href="#sendlocal-response-error">SendLocal: Error Response</a>, it should throw:</p>

                <dl>
                    <dt>400 Bad Request</dt>
                    <dd>The request path contains a malformed <var>(APP_UID, ORIGINATOR_UUID)</var> tuple.</dd>
                    <dt>404 Not Found</dt>
                    <dd>No payload exists identified by the <var>(APP_UID, ORIGINATOR_UUID)</var> tuple.</dd>
                </dl>

            </section>

        </section>

        <section data-requirement="must">

            <h1 data-ref="sendlocal-all">SendLocal-All</h1>

            <p>The <dfn>SendLocal-All</dfn> operation publishes all payloads to local outlets within the autonomous system.</p>

            <section>

                <h1>Request</h1>

                <p>This operation responds to an HTTP GET request on the <var>/local/payloads</var> route.</p>

                <section data-requirement="may">

                    <h1 data-ref="sendlocal-all-query">Query Parameter</h1>

                    <p>A request to <var>/local/payloads</var> may include a <dfn>query</dfn> parameter passed as a GET parameter or in the JSON-formatted request body. If this parameter is passed, the engine should regard it as a search string in order to return a subset of results. If this parameter is passed but the engine does not support it, the engine must reply with a <var>5xx Server Error</var>.</p>

                    <p data-status="non-normative">The CASA protocol specifies support for a <var>query</var> parameter containing a search string, but it does not specify how the engine shall perform the search.</p>

                </section>

            </section>

            <section>

                <h1>Success Response</h1>

                <p>If the engine will fulfill the request, it must reply with a <var>200 Success</var> response with a JSON-formatted message body containing an array of <a href="module/payload#localpayload"><var>LocalPayload</var> (Payload Module)</a> objects.</p>

            </section>

            <section>

                <h1>Error Response</h1>

                <p>If the engine will not fulfill the request, it must reply with a <var>Client Error 4xx</var> or a <var>Server Error 5xx</var>. In addition to the status codes recommended in <a href="#sendlocal-response-error">SendLocal: Error Response</a>, it should throw:</p>

                <dl>
                    <dt>501 Not Implemented</dt>
                    <dd>The engine does not support the <var>query</var> parameter.</dd>
                </dl>

            </section>

        </section>

        <section data-requirement="may">

            <h1 data-ref="sendlocal-query">SendLocal-Query</h1>

            <p>The <dfn>SendLocal-Query</dfn> operation publishes a subset of payloads to local outlets within the autonomous system. The subset published is defined by a search query written in a query language defined in the request URI.</p>

            <section>

                <h1>Request</h1>

                <p>This operation responds to an HTTP GET request on the <var>/local/payloads/_{TYPE}</var> route, where the value of <var>{TYPE}</var> is a query language supported by the engine and the request body is formatted in the specified query language.</p>

                <p data-status="non-normative">For example, if an engine supports Elastic Search, a <var>GET /local/payloads/_elasticsearch</var> request may be issued with a request body such as <code>{"query":{"match_phrase":{"attributes.use.tags":"mobile"}},"size":20}</code>.</p>

            </section>

        </section>

    </section>

    <section data-requirement="may">

        <h1 data-ref="localstore">LocalStore</h1>

        <p>The <dfn>LocalStore</dfn> structure is a persistent data store that contains <a href='module/payloads#localpayload'><var>LocalPayload</var> (Payload Module)</a> objects. A payload stored in this structure must have been processed through <a href='#adjintransform'><var>AdjInTransform</var></a> or be created locally.</p>

        <p data-status="non-normative">Except when originated locally, payloads entered into this structure come from <a href="#module/receiver#adjinstore"><var>AdjInStore</var> (Receiver Module)</a> after passing through <a href='#adjintransform'><var>AdjInTransform</var></a>.</p>

        <section data-requirement='must'>

            <h1>Required Operations</h1>

            <p>This structure must support two operations:</p>

            <dl>
                <dt data-ref='localstore-create'>LocalStore::create(LocalPayload)</dt>
                <dd>Stores a new record in persistence; must not create a record if any record already exists in persistence with the same <var>identity</var> as the new record. Payloads passed to <var>create</var> must either be originated locally or be passed through <var>AdjInTransform.</var></dd>
                <dt data-ref='localstore-get'>LocalStore::get(PayloadIdentity)</dt>
                <dd>Gets a record from persistence that matches the <a href='module/payload#payloadidentity'><var>PayloadIdentity</var> (Payload Module)</a> passed to this method, or if no identity is passed, returns all payloads; must return false if identity was specified and no payload exists matching identity.</dd>
                <dt data-ref='localstore-get_all'>LocalStore::get_all()</dt>
                <dd>Gets all records from persistence as an array of objects; must return an empty array if no payloads exist in persistence.</dd>
            </dl>

            <p data-status='non-normative'>This structure will not store two payloads with identical <var>identity</var> sections.</p>

            <p>The <var>create</var> operation must not be used in any way except as defined by this protocol and its modules.</p>

        </section>

        <section data-requirement='should'>

            <h1>Additional Operations</h1>

            <p>This structure should support two additional operations:</p>

            <dl>
                <dt data-ref='localstore-update'>LocalStore::update(LocalPayload)</dt>
                <dd>Updates an existing payload record in persistence; must identify the payload to update by finding an existing record in persistence with the same <var>identity</var> attribute.</dd>
                <dt data-ref='localstore-get'>LocalStore::delete(PayloadIdentity)</dt>
                <dd>Deletes a record from persistence that matches the <a href='module/payload#payloadidentity'><var>PayloadIdentity</var> (Payload Module)</a> passed to this method.</dd>
                <dt data-ref='localstore-get_query'>LocalStore::get_query(string)</dt>
                <dd>Filtering by a string passed as an argument, gets a subset of records from persistence as an array of objects; must return an empty array if no payloads exist in persistence.</dd>
                <dt data-ref='localstore-get_search'>LocalStore::get_search(mixed)</dt>
                <dd>Filtering by query object as defined by the particular storage method, gets a subset of records from persistence as an array of objects; must return an empty array if no payloads exist in persistence.</dd>
            </dl>

            <p>To change the values of a payload not originated from the engine itself, use <a href='#adjintransform'><var>AdjInTransform</var></a>. A payload not originated from the engine itself must never be updated directly within this structure.</p>

            <p>The <var>delete</var> operation should be used to prune out stale entries.</p>

            <p>The <var>update</var> and <var>delete</var> operations must not be used in any way except as defined by this protocol and its modules.</p>

    </section>
    
    <section data-requirement="may">
        
        <h1 data-ref="localin">LocalIn</h1>
        
        <footer>
            
            <section data-requirement="must">
                
                <h1>Requirements</h1>
        
                <p>The following specifications must be implemented with this sub-module:</p>

                <dl>
                    <dt><a href="module/receiver#receivein">CASA Protocol Receiver Module - ReceiveIn</a></dt>
                    <dd>Must implement ReceiveIn; may implement with access control.</dd>
                    <dt><a href="module/receiver#adjintranslate">CASA Protocol Receiver Module - AdjInTranslate</a></dt>
                    <dd>Must implement AdjInTranslate.</dd>
                    <dt><a href="module/receiver#adjinsquash">CASA Protocol Receiver Module - AdjInSquash</a></dt>
                    <dd>Must implement AdjInSquash.</dd>
                    <dt><a href="module/receiver#adjinsquash">CASA Protocol Receiver Module - AdjInFilter</a></dt>
                    <dd>Must implement AdjInFilter; may implement with custom rules.</dd>
                    <dt><a href="module/receiver#adjinstore">CASA Protocol Receiver Module - AdjInStore</a></dt>
                    <dd>Must implement AdjInStore.</dd>
                    <dt><a href="module/local#localstore">CASA Protocol Receiver Module - LocalStore</a></dt>
                    <dd>Must implement LocalStore.</dd>
                </dl>
                
            </section>
            
        </footer>
        
        <section data-requirement="must">
            
            <h1>AdjInStoreToLocalStore</h1>

            <p>The <dfn>AdjInStoreToLocalStore</dfn> data path delivers payloads from the <a href="module/receiver#adjinstore"><var>AdjInStore</var> (Receiver Module)</a> into <a href="#localstore"><var>LocalStore</var></a>.</p>

            <p>This operation may simply copy payloads from <var>AdjInStore</var> to <var>LocalStore</var> or it may pass payloads from <var>AdjInStore</var> through <var>AdjInTransform</var> before storing them in <var>LocalStore</var>.</p>

        </section>
        
        <section data-requirement="may">
            
            <h1>AdjInTransform</h1>

            <p>The <dfn>AdjInTransform</dfn> operation makes changes to all payloads received from peers. This operation may be performed over any payload from <var>AdjInStore</var>. For transformations performed, it may update the journal.</p>

            <p data-status="non-normative">Updating the journal during <var>AdjInTransform</var> only affects payloads locally and will not propagate to peers. Consequently, it is not required. To make changes to payloads that propagate beyond the node, use <a href="module/relay#adjouttransform"><var>AdjOutTransform</var> (Relay Module)</a> instead.</p>

            </section>
            
        </section>
        
    </section>
    
    <section data-requirement="may">
        
        <h1 data-ref="localout">LocalOut</h1>
        
        <footer>
            
            <section data-requirement="must">
                
                <h1>Requirements</h1>
        
                <p>The following specifications must be implemented with this sub-module:</p>

                <dl>
                    <dt><a href="module/relay#adjouttranslate">CASA Protocol Relay Module - AdjOutTranslate</a></dt>
                    <dd>Must implement AdjOutTranslate.</dd>
                    <dt><a href="module/relay#adjoutfilter">CASA Protocol Relay Module - AdjOutFilter</a></dt>
                    <dd>Must implement AdjOutFilter; may implement with custom rules.</dd>
                    <dt><a href="module/relay#adjouttransform">CASA Protocol Relay Module - AdjOutTransform</a></dt>
                    <dd>Must implement AdjOutTransform; may implement with custom rules.</dd>
                    <dt><a href="module/relay#adjoutstore">CASA Protocol Receiver Module - AdjOutStore</a></dt>
                    <dd>Must implement AdjOutStore.</dd>
                    <dt><a href="module/local#localstore">CASA Protocol Receiver Module - LocalStore</a></dt>
                    <dd>Must implement LocalStore.</dd>
                </dl>
                
            </section>
            
        </footer>
        
        <section data-requirement="must">
            
            <h1>LocalStoreToAdjOutStore</h1>

            <p>The <dfn>LocalStoreToAdjOutStore</dfn> data path delivers payloads originated locally from <a href="#localstore"><var>LocalStore</var></a> into <a href="#localstore"><var>AdjOutStore</var></a>.</p>

            <p>The data path for this operation:</p>

            <ol>
                <li>
                    For each payload with <var>identity.originator_id</var> equal to the engine's ID:
                    <ol>
                        <li>Must transform attributes via <a href="module/relay#adjouttransform"><var>AdjOutTransform</var></a>; may transform with custom rules;</li>
                        <li>May store within <a href="#adjoutstore">AdjOutStore</a></li>
                    </ol>
                </li>
            </ol>

            <p>This operation must not copy any payloads that did not originate from this engine.</p>

        </section>
        
    </section>

</main>